[env:esp32s3dev]
platform = espressif32
board = esp32-s3-devkitc-1
framework = espidf

; --- Opcje kompilacji ---
build_flags =
    -D LV_CONF_INCLUDE_SIMPLE=1  ; Umożliwia użycie lv_conf.h (jeśli używasz LVGL - patrz niżej)
    -D LV_CONF_PATH="lv_conf.h" ; Ścieżka do pliku lv_conf.h (jeśli używasz LVGL)
    -D CONFIG_SPIRAM_SUPPORT=1   ; Włącza obsługę PSRAM (jeśli ESP32-S3 ma PSRAM)
    -I src/include               ; Dodaj folder include do ścieżek wyszukiwania nagłówków
    ; Dodatkowe opcje kompilacji specyficzne dla projektu:
    -std=c++17                 ; Używaj standardu C++17 (zalecane)
    -Wall                      ; Włącz wszystkie ostrzeżenia kompilatora
    -Wextra                     ; Włącz dodatkowe ostrzeżenia
    -O2                        ; Optymalizacja dla szybkości (możesz dostosować)

; --- Opcje bibliotek ---
lib_deps =
    ; Przykładowe biblioteki (musisz je dostosować do swoich potrzeb!):
    ;  lvgl/lvgl@^9.0.0            ; Jeśli używasz LVGL - dodaj tę linię
    ;  https://github.com/espressif/esp32-usb-soft-host.git  ; Przykład biblioteki USB Host (może wymagać dostosowania)
    ;  SPI                      ; Jeśli używasz SPI (np. do ekranu)
    ;  Wire                     ; Jeśli używasz I2C
    ;  FS                       ; Do obsługi systemu plików (FAT)
    ;  SdFat                    ; Alternatywna biblioteka do obsługi FAT
     plerup/EspSoftwareSerial@^6.13.2
     ottowinter/ESPAsyncWebServer-esphome@^3.0.0
     256dpi/MQTT@^2.5.1
     bblanchon/ArduinoJson@^6.20.0
    ; Dodaj tutaj inne potrzebne biblioteki

; --- Opcje monitora portu szeregowego (opcjonalne, ale przydatne) ---
monitor_speed = 115200
monitor_filters =
    esp32_exception_decoder  ; Dekoduj stos wywołań przy wyjątkach
board_build.partitions = partitions.csv
